/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.hyunseda.market.presentation;

import co.com.hyunseda.market.domain.Category;
import co.com.hyunseda.market.infrastructure.Observer;
import co.com.hyunseda.market.domain.Product;
import co.com.hyunseda.market.service.CategoryService;
import co.com.hyunseda.market.service.ProductService;
import co.com.hyunseda.market.service.ShoppingCartService;
import java.util.ArrayList;

import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIBUSCPRODUCTO extends javax.swing.JDialog implements Observer{
    private CategoryService categoryService;
    private ProductService productService;
    private ShoppingCartService shoppingCartService;
    /**
     * Creates new form GUIProductsFind
     */
    public GUIBUSCPRODUCTO(java.awt.Frame parent, boolean modal,CategoryService categoryService,ProductService productService,ShoppingCartService shoppingCartService) {
        super(parent, modal);
        initComponents();
        initializeTable();
        this.categoryService = categoryService;
        this.productService = productService;
        this.shoppingCartService = shoppingCartService;
        setLocationRelativeTo(null); //centrar al ventana
    }
    
    private void initializeTable() {
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name", "Description","Category (Id)"
                }
        ));
    }
    
    private void fillTable(List<Product> listProducts) {
    DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

    for (Product product : listProducts) {
            String categories = ""; // Inicializamos una cadena vacía para las categorías

            // Concatenamos las categorías secundarias en una sola cadena
            for (Category category : product.getCategoriasSecundarias()) {
                categories += category.getCategoryName() + ", ";
            }

            // Eliminamos la última coma y espacio extra, si es necesario
            if (!categories.isEmpty()) {
                categories = categories.substring(0, categories.length() - 2);
            }

            // Agregamos una fila a la tabla con los datos del producto y las categorías
            model.addRow(new Object[]{
                product.getProductId(),
                product.getProductName(),
                product.getProductDescripcion(),
                categories
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        pnlNorth = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rdoId = new javax.swing.JRadioButton();
        rdoName = new javax.swing.JRadioButton();
        rdoIdCategory = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnSearchAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Búsqueda de productos");

        pnlCenter.setLayout(new java.awt.BorderLayout());

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        pnlCenter.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Buscar por:");
        pnlNorth.add(jLabel1);

        buttonGroup1.add(rdoId);
        rdoId.setSelected(true);
        rdoId.setText("Id");
        pnlNorth.add(rdoId);

        buttonGroup1.add(rdoName);
        rdoName.setText("Nombre del producto");
        pnlNorth.add(rdoName);

        rdoIdCategory.setText("Categoria (ID)");
        rdoIdCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoIdCategoryActionPerformed(evt);
            }
        });
        pnlNorth.add(rdoIdCategory);

        txtSearch.setPreferredSize(new java.awt.Dimension(62, 32));
        pnlNorth.add(txtSearch);

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        pnlNorth.add(btnSearch);

        btnSearchAll.setText("Buscar Todos");
        btnSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAllActionPerformed(evt);
            }
        });
        pnlNorth.add(btnSearchAll);

        getContentPane().add(pnlNorth, java.awt.BorderLayout.PAGE_START);

        btnRegresar.setText("Regresar Menu Producto");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar);

        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAllActionPerformed
        
        fillTable(productService.findAllProducts());
    }//GEN-LAST:event_btnSearchAllActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        GUIMENUPRODUCTO abrir = new GUIMENUPRODUCTO(categoryService,productService,shoppingCartService);
        abrir.setVisible(true);
        this.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        buscarProductos();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void rdoIdCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoIdCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoIdCategoryActionPerformed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchAll;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlNorth;
    private javax.swing.JRadioButton rdoId;
    private javax.swing.JRadioButton rdoIdCategory;
    private javax.swing.JRadioButton rdoName;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void buscarProductos() {
        List<Product> products = new ArrayList<>();
        if (rdoId.isSelected()) {
            if (txtSearch.getText().trim().equals("")) {
                Messages.showMessageDialog("Debe ingresar el id del producto", "Atención");
                txtSearch.requestFocus();
                return;
            }
            products.add(productService.findProductById(Integer.parseInt(txtSearch.getText())));
        }
        if (rdoName.isSelected()) {
            if (txtSearch.getText().trim().equals("")) {
                Messages.showMessageDialog("Debe ingresar el nombre del producto", "Atención");
                txtSearch.requestFocus();
                return;
            }
            products = productService.findAllProductsByName(txtSearch.getText());
            fillTable(products);
        }
        if (rdoIdCategory.isSelected()) {
            if (txtSearch.getText().trim().equals("")) {
                Messages.showMessageDialog("Debe ingresar el id de la categoría", "Atención");
                txtSearch.requestFocus();
                return;
            }
            products = productService.findAllProductsByCategoryId(Integer.parseInt(txtSearch.getText()));
            fillTable(products);
        }
        fillTable(products);
    }
     @Override
    public void update(Object o) {
        //ProductService productServiceLocal = (ProductService) o;
        buscarProductos();
        /*
        lbllUsername.setText(productServiceLocal.getProduct().getProductName());
        lblName.setText(productServiceLocal.getProduct().getName());
        lblTotal.setText("" + productServiceLocal.getProduct().getTotalProducts());
        */
    }
}
